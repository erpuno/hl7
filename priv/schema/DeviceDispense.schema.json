{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://hl7.erp.uno/priv/schema/DeviceDispense.schema.json",
  "$ref": "#/definitions/DeviceDispense",
  "description": "see https://hl7.org/fhir/R5/json.html for information about the FHIR Json Schemas",
  "definitions": {
    "markdown": {
      "pattern": "^^[\\s\\S]+$$",
      "type": "string",
      "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
    },
    "dateTime": {
      "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)?)?)?$",
      "type": "string",
      "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a UTC offset SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
    },
    "code": {
      "pattern": "^[^\\s]+( [^\\s]+)*$",
      "type": "string",
      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
    },
    "uri": {
      "pattern": "^\\S*$",
      "type": "string",
      "description": "String of characters used to identify a name or a resource"
    },
    "DeviceDispense": {
      "description": "A record of dispensation of a device - i.e., assigning a device to a patient, or to a professional for their use.",
      "properties": {
        "resourceType": {
          "description": "This is a DeviceDispense resource",
          "const": "DeviceDispense"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "type": "string"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "Meta.schema.json#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "Narrative.schema.json#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "ResourceList.schema.json#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "Extension.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "Extension.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "identifier": {
          "description": "Business identifier for this dispensation.",
          "items": {
            "$ref": "Identifier.schema.json#/definitions/Identifier"
          },
          "type": "array"
        },
        "basedOn": {
          "description": "The order or request that this dispense is fulfilling.",
          "items": {
            "$ref": "Reference.schema.json#/definitions/Reference"
          },
          "type": "array"
        },
        "partOf": {
          "description": "The bigger event that this dispense is a part of.",
          "items": {
            "$ref": "Reference.schema.json#/definitions/Reference"
          },
          "type": "array"
        },
        "status": {
          "description": "A code specifying the state of the set of dispense events.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "statusReason": {
          "description": "Indicates the reason why a dispense was or was not performed.",
          "$ref": "CodeableReference.schema.json#/definitions/CodeableReference"
        },
        "category": {
          "description": "Indicates the type of device dispense.",
          "items": {
            "$ref": "CodeableConcept.schema.json#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "device": {
          "description": "Identifies the device being dispensed. This is either a link to a resource representing the details of the device or a simple attribute carrying a code that identifies the device from a known list of devices.",
          "$ref": "CodeableReference.schema.json#/definitions/CodeableReference"
        },
        "subject": {
          "description": "A link to a resource representing the person to whom the device is intended.",
          "$ref": "Reference.schema.json#/definitions/Reference"
        },
        "receiver": {
          "description": "Identifies the person who picked up the device or the person or location where the device was delivered.  This may be a patient or their caregiver, but some cases exist where it can be a healthcare professional or a location.",
          "$ref": "Reference.schema.json#/definitions/Reference"
        },
        "encounter": {
          "description": "The encounter that establishes the context for this event.",
          "$ref": "Reference.schema.json#/definitions/Reference"
        },
        "supportingInformation": {
          "description": "Additional information that supports the device being dispensed.",
          "items": {
            "$ref": "Reference.schema.json#/definitions/Reference"
          },
          "type": "array"
        },
        "performer": {
          "description": "Indicates who or what performed the event.",
          "items": {
            "$ref": "#/definitions/DeviceDispense_Performer"
          },
          "type": "array"
        },
        "location": {
          "description": "The principal physical location where the dispense was performed.",
          "$ref": "Reference.schema.json#/definitions/Reference"
        },
        "type": {
          "description": "Indicates the type of dispensing event that is performed.",
          "$ref": "CodeableConcept.schema.json#/definitions/CodeableConcept"
        },
        "quantity": {
          "description": "The number of devices that have been dispensed.",
          "$ref": "Quantity.schema.json#/definitions/Quantity"
        },
        "preparedDate": {
          "description": "The time when the dispensed product was packaged and reviewed.",
          "$ref": "#/definitions/dateTime"
        },
        "_preparedDate": {
          "description": "Extensions for preparedDate",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "whenHandedOver": {
          "description": "The time the dispensed product was made available to the patient or their representative.",
          "$ref": "#/definitions/dateTime"
        },
        "_whenHandedOver": {
          "description": "Extensions for whenHandedOver",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "destination": {
          "description": "Identification of the facility/location where the device was /should be shipped to, as part of the dispense process.",
          "$ref": "Reference.schema.json#/definitions/Reference"
        },
        "note": {
          "description": "Extra information about the dispense that could not be conveyed in the other attributes.",
          "items": {
            "$ref": "Annotation.schema.json#/definitions/Annotation"
          },
          "type": "array"
        },
        "usageInstruction": {
          "description": "The full representation of the instructions.",
          "$ref": "#/definitions/markdown"
        },
        "_usageInstruction": {
          "description": "Extensions for usageInstruction",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "eventHistory": {
          "description": "A summary of the events of interest that have occurred, such as when the dispense was verified.",
          "items": {
            "$ref": "Reference.schema.json#/definitions/Reference"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": ["subject", "device", "resourceType"]
    },
    "DeviceDispense_Performer": {
      "description": "A record of dispensation of a device - i.e., assigning a device to a patient, or to a professional for their use.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "type": "string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "Extension.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "Extension.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "function": {
          "description": "Distinguishes the type of performer in the dispense.  For example, date enterer, packager, final checker.",
          "$ref": "CodeableConcept.schema.json#/definitions/CodeableConcept"
        },
        "actor": {
          "description": "The device, practitioner, etc. who performed the action.  It should be assumed that the actor is the dispenser of the device.",
          "$ref": "Reference.schema.json#/definitions/Reference"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": ["actor"]
    }
  }
}
