{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://hl7.erp.uno/priv/schema/EvidenceVariable.schema.json",
  "$ref": "#/definitions/EvidenceVariable",
  "description": "see https://hl7.org/fhir/R5/json.html for information about the FHIR Json Schemas",
  "definitions": {
    "uri": {
      "pattern": "^\\S*$",
      "type": "string",
      "description": "String of characters used to identify a name or a resource"
    },
    "date": {
      "description": "The date that the list was prepared.",
      "type": "string",
      "pattern": "-?([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
    },
    "dateTime": {
      "description": "The date that the list was prepared.",
      "type": "string",
      "pattern": "-?([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?"
    },
    "code": {
      "pattern": "^[^\\s]+( [^\\s]+)*$",
      "type": "string",
      "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
    },
    "positiveInt": {
      "pattern": "[1-9][0-9]*",
      "description": "Extensions for defaultValuePositiveInt",
      "type": "number"
    },
    "markdown": {
      "pattern": "^^[\\s\\S]+$$",
      "type": "string",
      "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
    },
    "Expression": {},
    "canonical": {},
    "EvidenceVariable": {
      "description": "The EvidenceVariable resource describes an element that knowledge (Evidence) is about.",
      "properties": {
        "resourceType": {
          "description": "This is a EvidenceVariable resource",
          "const": "EvidenceVariable"
        },
        "id": {
          "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.",
          "type": "string"
        },
        "meta": {
          "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.",
          "$ref": "Meta.schema.json#/definitions/Meta"
        },
        "implicitRules": {
          "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.",
          "$ref": "#/definitions/uri"
        },
        "_implicitRules": {
          "description": "Extensions for implicitRules",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "language": {
          "description": "The base language in which the resource is written.",
          "$ref": "#/definitions/code"
        },
        "_language": {
          "description": "Extensions for language",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "text": {
          "description": "A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
          "$ref": "Narrative.schema.json#/definitions/Narrative"
        },
        "contained": {
          "description": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, nor can they have their own independent transaction scope. This is allowed to be a Parameters resource if and only if it is referenced by a resource that provides context/meaning.",
          "items": {
            "$ref": "ResourceList.schema.json#/definitions/ResourceList"
          },
          "type": "array"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "Extension.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the resource and that modifies the understanding of the element that contains it and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "Extension.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "url": {
          "description": "An absolute URI that is used to identify this evidence variable when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which an authoritative instance of this evidence variable is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the evidence variable is stored on different servers.",
          "$ref": "#/definitions/uri"
        },
        "_url": {
          "description": "Extensions for url",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "identifier": {
          "description": "A formal identifier that is used to identify this evidence variable when it is represented in other formats, or referenced in a specification, model, design or an instance.",
          "items": {
            "$ref": "Identifier.schema.json#/definitions/Identifier"
          },
          "type": "array"
        },
        "version": {
          "description": "The identifier that is used to identify this version of the evidence variable when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the evidence variable author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts.",
          "type": "string"
        },
        "_version": {
          "description": "Extensions for version",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "versionAlgorithmString": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "pattern": "^^[\\s\\S]+$$",
          "type": "string"
        },
        "_versionAlgorithmString": {
          "description": "Extensions for versionAlgorithmString",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "versionAlgorithmCoding": {
          "description": "Indicates the mechanism used to compare versions to determine which is more current.",
          "$ref": "Coding.schema.json#/definitions/Coding"
        },
        "name": {
          "description": "A natural language name identifying the evidence variable. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
          "type": "string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "title": {
          "description": "A short, descriptive, user-friendly title for the evidence variable.",
          "type": "string"
        },
        "_title": {
          "description": "Extensions for title",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "status": {
          "description": "The status of this evidence variable. Enables tracking the life-cycle of the content.",
          "$ref": "#/definitions/code"
        },
        "_status": {
          "description": "Extensions for status",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "experimental": {
          "description": "A Boolean value to indicate that this resource is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
          "type": "boolean"
        },
        "_experimental": {
          "description": "Extensions for experimental",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "date": {
          "description": "The date  (and optionally time) when the evidence variable was last significantly changed. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the evidence variable changes.",
          "$ref": "#/definitions/dateTime"
        },
        "_date": {
          "description": "Extensions for date",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "publisher": {
          "description": "The name of the organization or individual responsible for the release and ongoing maintenance of the evidence variable.",
          "type": "string"
        },
        "_publisher": {
          "description": "Extensions for publisher",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "contact": {
          "description": "Contact details to assist a user in finding and communicating with the publisher.",
          "items": {
            "$ref": "ContactDetail.schema.json#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "description": {
          "description": "A free text natural language description of the evidence variable from a consumer\u0027s perspective.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "useContext": {
          "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate evidence variable instances.",
          "items": {
            "$ref": "UsageContext.schema.json#/definitions/UsageContext"
          },
          "type": "array"
        },
        "jurisdiction": {
          "description": "A legal or geographic region in which the {{title}} is intended to be used.",
          "items": {
            "$ref": "CodeableConcept.schema.json#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "purpose": {
          "description": "Explanation of why this EvidenceVariable is needed and why it has been designed as it has.",
          "$ref": "#/definitions/markdown"
        },
        "_purpose": {
          "description": "Extensions for purpose",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "copyright": {
          "description": "A copyright statement relating to the resource and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the resource.",
          "$ref": "#/definitions/markdown"
        },
        "_copyright": {
          "description": "Extensions for copyright",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "copyrightLabel": {
          "description": "A short string (\u003c50 characters), suitable for inclusion in a page footer that identifies the copyright holder, effective period, and optionally whether rights are resctricted. (e.g. \u0027All rights reserved\u0027, \u0027Some rights reserved\u0027).",
          "type": "string"
        },
        "_copyrightLabel": {
          "description": "Extensions for copyrightLabel",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "approvalDate": {
          "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.\n\nSee guidance around (not) making local changes to elements [here](canonicalresource.html#localization).",
          "$ref": "#/definitions/date"
        },
        "_approvalDate": {
          "description": "Extensions for approvalDate",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "lastReviewDate": {
          "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
          "$ref": "#/definitions/date"
        },
        "_lastReviewDate": {
          "description": "Extensions for lastReviewDate",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "effectivePeriod": {
          "description": "The period during which the resource content was or is planned to be in active use.",
          "$ref": "Period.schema.json#/definitions/Period"
        },
        "topic": {
          "description": "Descriptive topics related to the content of the {{title}}. Topics provide a high-level categorization as well as keywords for the {{title}} that can be useful for filtering and searching.",
          "items": {
            "$ref": "CodeableConcept.schema.json#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "author": {
          "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
          "items": {
            "$ref": "ContactDetail.schema.json#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "editor": {
          "description": "An individual or organization primarily responsible for internal coherence of the content.",
          "items": {
            "$ref": "ContactDetail.schema.json#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "reviewer": {
          "description": "An individual or organization asserted by the publisher to be primarily responsible for review of some aspect of the content.",
          "items": {
            "$ref": "ContactDetail.schema.json#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "endorser": {
          "description": "An individual or organization asserted by the publisher to be responsible for officially endorsing the content for use in some setting.",
          "items": {
            "$ref": "ContactDetail.schema.json#/definitions/ContactDetail"
          },
          "type": "array"
        },
        "relatedArtifact": {
          "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
          "items": {
            "$ref": "RelatedArtifact.schema.json#/definitions/RelatedArtifact"
          },
          "type": "array"
        },
        "shortTitle": {
          "description": "The short title provides an alternate title for use in informal descriptive contexts where the full, formal title is not necessary.",
          "type": "string"
        },
        "_shortTitle": {
          "description": "Extensions for shortTitle",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "note": {
          "description": "A human-readable string to clarify or explain concepts about the resource.",
          "items": {
            "$ref": "Annotation.schema.json#/definitions/Annotation"
          },
          "type": "array"
        },
        "actual": {
          "description": "True if the actual variable measured, false if a conceptual representation of the intended variable.",
          "type": "boolean"
        },
        "_actual": {
          "description": "Extensions for actual",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "characteristic": {
          "description": "A defining factor of the EvidenceVariable. Multiple characteristics are applied with \"and\" semantics.",
          "items": {
            "$ref": "#/definitions/EvidenceVariable_Characteristic"
          },
          "type": "array"
        },
        "handling": {
          "description": "The method of handling in statistical analysis.",
          "$ref": "#/definitions/code"
        },
        "_handling": {
          "description": "Extensions for handling",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "category": {
          "description": "A grouping for ordinal or polychotomous variables.",
          "items": {
            "$ref": "#/definitions/EvidenceVariable_Category"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": ["resourceType"]
    },
    "EvidenceVariable_Characteristic": {
      "description": "The EvidenceVariable resource describes an element that knowledge (Evidence) is about.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "type": "string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "Extension.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "Extension.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "linkId": {
          "description": "Label used for when a characteristic refers to another characteristic.",
          "type": "string"
        },
        "_linkId": {
          "description": "Extensions for linkId",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "description": {
          "description": "A short, natural language description of the characteristic that could be used to communicate the criteria to an end-user.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "note": {
          "description": "A human-readable string to clarify or explain concepts about the characteristic.",
          "items": {
            "$ref": "Annotation.schema.json#/definitions/Annotation"
          },
          "type": "array"
        },
        "exclude": {
          "description": "When true, this characteristic is an exclusion criterion. In other words, not matching this characteristic definition is equivalent to meeting this criterion.",
          "type": "boolean"
        },
        "_exclude": {
          "description": "Extensions for exclude",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "definitionReference": {
          "description": "Defines the characteristic using a Reference.",
          "$ref": "Reference.schema.json#/definitions/Reference"
        },
        "definitionCanonical": {
          "description": "Defines the characteristic using Canonical.",
          "$ref": "#/definitions/canonical"
        },
        "definitionCodeableConcept": {
          "description": "Defines the characteristic using CodeableConcept.",
          "$ref": "CodeableConcept.schema.json#/definitions/CodeableConcept"
        },
        "definitionExpression": {
          "description": "Defines the characteristic using Expression.",
          "$ref": "#/definitions/Expression"
        },
        "definitionId": {
          "description": "Defines the characteristic using id.",
          "type": "string"
        },
        "_definitionId": {
          "description": "Extensions for definitionId",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "definitionByTypeAndValue": {
          "description": "Defines the characteristic using both a type and value[x] elements.",
          "$ref": "#/definitions/EvidenceVariable_DefinitionByTypeAndValue"
        },
        "definitionByCombination": {
          "description": "Defines the characteristic as a combination of two or more characteristics.",
          "$ref": "#/definitions/EvidenceVariable_DefinitionByCombination"
        },
        "instancesQuantity": {
          "description": "Number of occurrences meeting the characteristic.",
          "$ref": "Quantity.schema.json#/definitions/Quantity"
        },
        "instancesRange": {
          "description": "Number of occurrences meeting the characteristic.",
          "$ref": "Range.schema.json#/definitions/Range"
        },
        "durationQuantity": {
          "description": "Length of time in which the characteristic is met.",
          "$ref": "Quantity.schema.json#/definitions/Quantity"
        },
        "durationRange": {
          "description": "Length of time in which the characteristic is met.",
          "$ref": "Range.schema.json#/definitions/Range"
        },
        "timeFromEvent": {
          "description": "Timing in which the characteristic is determined.",
          "items": {
            "$ref": "#/definitions/EvidenceVariable_TimeFromEvent"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "EvidenceVariable_DefinitionByTypeAndValue": {
      "description": "The EvidenceVariable resource describes an element that knowledge (Evidence) is about.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "type": "string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "Extension.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "Extension.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "type": {
          "description": "Used to express the type of characteristic.",
          "$ref": "CodeableConcept.schema.json#/definitions/CodeableConcept"
        },
        "method": {
          "description": "Method for how the characteristic value was determined.",
          "items": {
            "$ref": "CodeableConcept.schema.json#/definitions/CodeableConcept"
          },
          "type": "array"
        },
        "device": {
          "description": "Device used for determining characteristic.",
          "$ref": "Reference.schema.json#/definitions/Reference"
        },
        "valueCodeableConcept": {
          "description": "Defines the characteristic when paired with characteristic.type.",
          "$ref": "CodeableConcept.schema.json#/definitions/CodeableConcept"
        },
        "valueBoolean": {
          "description": "Defines the characteristic when paired with characteristic.type.",
          "pattern": "^true|false$",
          "type": "boolean"
        },
        "_valueBoolean": {
          "description": "Extensions for valueBoolean",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "valueQuantity": {
          "description": "Defines the characteristic when paired with characteristic.type.",
          "$ref": "Quantity.schema.json#/definitions/Quantity"
        },
        "valueRange": {
          "description": "Defines the characteristic when paired with characteristic.type.",
          "$ref": "Range.schema.json#/definitions/Range"
        },
        "valueReference": {
          "description": "Defines the characteristic when paired with characteristic.type.",
          "$ref": "Reference.schema.json#/definitions/Reference"
        },
        "valueId": {
          "description": "Defines the characteristic when paired with characteristic.type.",
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_valueId": {
          "description": "Extensions for valueId",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "offset": {
          "description": "Defines the reference point for comparison when valueQuantity or valueRange is not compared to zero.",
          "$ref": "CodeableConcept.schema.json#/definitions/CodeableConcept"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": ["type"]
    },
    "EvidenceVariable_DefinitionByCombination": {
      "description": "The EvidenceVariable resource describes an element that knowledge (Evidence) is about.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "type": "string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "Extension.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "Extension.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "code": {
          "description": "Used to specify if two or more characteristics are combined with OR or AND.",
          "$ref": "#/definitions/code"
        },
        "_code": {
          "description": "Extensions for code",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "threshold": {
          "description": "Provides the value of \"n\" when \"at-least\" or \"at-most\" codes are used.",
          "$ref": "#/definitions/positiveInt"
        },
        "_threshold": {
          "description": "Extensions for threshold",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "characteristic": {
          "description": "A defining factor of the characteristic.",
          "items": {
            "$ref": "#/definitions/EvidenceVariable_Characteristic"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false,
      "required": ["characteristic"]
    },
    "EvidenceVariable_TimeFromEvent": {
      "description": "The EvidenceVariable resource describes an element that knowledge (Evidence) is about.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "type": "string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "Extension.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "Extension.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "description": {
          "description": "Human readable description.",
          "$ref": "#/definitions/markdown"
        },
        "_description": {
          "description": "Extensions for description",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "note": {
          "description": "A human-readable string to clarify or explain concepts about the timeFromEvent.",
          "items": {
            "$ref": "Annotation.schema.json#/definitions/Annotation"
          },
          "type": "array"
        },
        "eventCodeableConcept": {
          "description": "The event used as a base point (reference point) in time.",
          "$ref": "CodeableConcept.schema.json#/definitions/CodeableConcept"
        },
        "eventReference": {
          "description": "The event used as a base point (reference point) in time.",
          "$ref": "Reference.schema.json#/definitions/Reference"
        },
        "eventDateTime": {
          "description": "The event used as a base point (reference point) in time.",
          "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)?)?)?$",
          "type": "string"
        },
        "_eventDateTime": {
          "description": "Extensions for eventDateTime",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "eventId": {
          "description": "The event used as a base point (reference point) in time.",
          "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$",
          "type": "string"
        },
        "_eventId": {
          "description": "Extensions for eventId",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "quantity": {
          "description": "Used to express the observation at a defined amount of time before or after the event.",
          "$ref": "Quantity.schema.json#/definitions/Quantity"
        },
        "range": {
          "description": "Used to express the observation within a period before and/or after the event.",
          "$ref": "Range.schema.json#/definitions/Range"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "EvidenceVariable_Category": {
      "description": "The EvidenceVariable resource describes an element that knowledge (Evidence) is about.",
      "properties": {
        "id": {
          "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.",
          "type": "string"
        },
        "extension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
          "items": {
            "$ref": "Extension.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "modifierExtension": {
          "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element\u0027s descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and managable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).",
          "items": {
            "$ref": "Extension.schema.json#/definitions/Extension"
          },
          "type": "array"
        },
        "name": {
          "description": "Description of the grouping.",
          "type": "string"
        },
        "_name": {
          "description": "Extensions for name",
          "$ref": "Element.schema.json#/definitions/Element"
        },
        "valueCodeableConcept": {
          "description": "Definition of the grouping.",
          "$ref": "CodeableConcept.schema.json#/definitions/CodeableConcept"
        },
        "valueQuantity": {
          "description": "Definition of the grouping.",
          "$ref": "Quantity.schema.json#/definitions/Quantity"
        },
        "valueRange": {
          "description": "Definition of the grouping.",
          "$ref": "Range.schema.json#/definitions/Range"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  }
}
